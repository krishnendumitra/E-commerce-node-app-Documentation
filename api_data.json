[
  {
    "type": "post",
    "url": "/api/v1/products/create",
    "title": "Create product",
    "version": "1.0.0",
    "group": "create",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "authToken",
            "description": "<p>The token for authentication.(Send authToken as query parameter, body parameter or as a header)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productName",
            "description": "<p>name of the product passed as a body parameter</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productDetails",
            "description": "<p>details of the product passed as a body parameter</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "thumbnail",
            "description": "<p>thumbnail image of the product passed as a body parameter</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "large",
            "description": "<p>large image of the product passed as a body parameter</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "productPrice",
            "description": "<p>price of the product passed as a body parameter</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "productPriceDiscount",
            "description": "<p>price discount of the product passed as a body parameter</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "category",
            "description": "<p>category of the product passed as a body parameter</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "seller",
            "description": "<p>seller of the product passed as a body parameter</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "seoTags",
            "description": "<p>seo tags of the product passed as a body parameter (multiple values should be separated by commas)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "areaAvailability",
            "description": "<p>area availability of the product passed as a body parameter (multiple values should be separated by commas)</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": " {\n\t   error: false,\n\t   message: \"product Created successfully\",\n\t   status: 200,\n\t   data: [{\n\t\t\t\t\t\n\t\t\t\t\t\tproductImage: {\n\t\t\t\t\t\t\tthumbnail: \"string\",\n\t\t\t\t\t\t\tlarge: \"string\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tproductName: \"string\",\n\t\t\t\t\t\tproductDetails: \"string\",\n\t\t\t\t\t\tproductPrice: \"number\",\n\t\t\t\t\t\tproductPriceDiscount: \"number\",\n\t\t\t\t\t\tproductViews: \"number\",\n\t\t\t\t\t\tisPublished: \"boolean\",\n\t\t\t\t\t\tcategory: \"string\",\n\t\t\t\t\t\tseller: \"string\",\n\t\t\t\t\t\tareaAvailability: \"string\"(type = array),\n\t\t\t\t\t\tseoTags: \"string\"(type = array),\n\t\t\t\t\t\tposted: \"string\",\n\t\t\t\t\t\tlastUpdated: \"string\",\n\t\t\t\t\t\tinCartOfCustomers: \"string\"(type = array),\n\t\t\t\t\t\tproductId: \"string\"\n\t\t\t\t\t}]\n\t\t\t\t}\n\t    \t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "\n{\n\t    error: true,\n\t    message: \"internal error\",\n\t    status: 500,\n\t    data: null\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/ecomRoutes.js",
    "groupTitle": "create",
    "name": "PostApiV1ProductsCreate"
  },
  {
    "type": "post",
    "url": "/api/v1/products/:productId/delete",
    "title": "Delete product",
    "version": "1.0.0",
    "group": "delete",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "authToken",
            "description": "<p>The token for authentication.(Send authToken as query parameter, body parameter or as a header)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productId",
            "description": "<p>productId of the product passed as the URL parameter</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": " {\n\t  \terror: false,\n\t  \tmessage: \"product deleted successfully\",\n\t  \tstatus: 200,\n\t  \tdata: {\n\t\t  \t\tn: number,\n\t\t  \t\tok: number\n\t  \t\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "\n{\n        error: true,\n        message: \"internal error\",\n        status: 500,\n        data: null\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/ecomRoutes.js",
    "groupTitle": "delete",
    "name": "PostApiV1ProductsProductidDelete"
  },
  {
    "type": "put",
    "url": "/api/v1/products/:productId/edit",
    "title": "Edit product",
    "version": "1.0.0",
    "group": "edit",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "authToken",
            "description": "<p>The token for authentication.(Send authToken as query parameter, body parameter or as a header)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productId",
            "description": "<p>productId of the product passed as the URL parameter</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": " {\n\t    \terror: false,\n\t    \tmessage: \"product Edited Successfully.\",\n\t    \tstatus: 200,\n\t    \tdata: [{\n            \t\tproductImage:{\n                \t\t\tthumbnail: \"string\",\n                \t\t\tlarge: \"string\"\n\t\t\t\t\t},\n            \t\tproductName: \"string\",\n            \t\tproductDetails: \"string\",\n            \t\tproductPrice: number,\n            \t\tproductPriceDiscount: number,\n            \t\tproductViews: number,\n            \t\tisPublished: boolean,\n            \t\tcategory: \"string\",\n            \t\tseller: \"string\",\n            \t\tareaAvailability: \"string\"(type = array),\n            \t\tseoTags: \"string\"(type = array),\n            \t\tposted: \"string\",\n            \t\tlastUpdated: \"string\",\n            \t\tinCartOfCustomers: \"string\"(type = array),\n            \t\tproductId: \"string\"\n                \t}]\n\t    \t\t}\n\t\t\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "\n{\n        error: true,\n        message: \"internal error\",\n        status: 500,\n        data: null\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/ecomRoutes.js",
    "groupTitle": "edit",
    "name": "PutApiV1ProductsProductidEdit"
  },
  {
    "type": "get",
    "url": "/api/v1/products/all",
    "title": "Get all products",
    "version": "1.0.0",
    "group": "read",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "authToken",
            "description": "<p>The token for authentication.(Send authToken as query parameter, body parameter or as a header)</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": " {\n\t    error: false,\n\t    message: \"all products found\",\n\t    status: 200,\n\t    data: [{\n\t\t\t\t\tproductImage: {\n\t\t\t\t\t\tthumbnail: \"string\",\n\t\t\t\t\t\tlarge: \"string\"\n\t\t\t\t\t},\n\t\t\t\t\tproductName: \"string\",\n\t\t\t\t\tproductDetails: \"string\",\n\t\t\t\t\tproductPrice: number,\n\t\t\t\t\tproductPriceDiscount: number,\n\t\t\t\t\tproductViews: number,\n\t\t\t\t\tisPublished: boolean,\n\t\t\t\t\tcategory: \"string\",\n\t\t\t\t\tseller: \"string\",\n\t\t\t\t\tareaAvailability: \"string\"(type = array),\n\t\t\t\t\tseoTags: \"string\"(type = array),\n\t\t\t\t\tposted: \"string\",\n\t\t\t\t\tlastUpdated: \"string\",\n\t\t\t\t\tinCartOfCustomers: \"string\"(type = array),\n\t\t\t\t\tproductId: \"string\"\n            \t\t}]\n\t    \t\t}\n\t\t \t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "\n{\n        error: true,\n        message: \"internal error\",\n        status: 500,\n        data: null\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/ecomRoutes.js",
    "groupTitle": "read",
    "name": "GetApiV1ProductsAll"
  },
  {
    "type": "get",
    "url": "/api/v1/products/view/by/category/:category",
    "title": "Get all products by category",
    "version": "1.0.0",
    "group": "read",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "authToken",
            "description": "<p>The token for authentication.(Send authToken as query parameter, body parameter or as a header)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "category",
            "description": "<p>category of the product passed as the URL parameter</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": " {\n\t    error: false,\n\t    message: \"product details found\",\n\t    status: 200,\n\t    data: [{\n\t\t\t\t\tproductImage: {\n\t\t\t\t\t\tthumbnail: \"string\",\n\t\t\t\t\t\tlarge: \"string\"\n\t\t\t\t\t},\n\t\t\t\t\tproductName: \"string\",\n\t\t\t\t\tproductDetails: \"string\",\n\t\t\t\t\tproductPrice: number,\n\t\t\t\t\tproductPriceDiscount: number,\n\t\t\t\t\tproductViews: number,\n\t\t\t\t\tisPublished: boolean,\n\t\t\t\t\tcategory: \"string\",\n\t\t\t\t\tseller: \"string\",\n\t\t\t\t\tareaAvailability: \"string\"(type = array),\n\t\t\t\t\tseoTags: \"string\"(type = array),\n\t\t\t\t\tposted: \"string\",\n\t\t\t\t\tlastUpdated: \"string\",\n\t\t\t\t\tinCartOfCustomers: \"string\"(type = array),\n\t\t\t\t\tproductId: \"string\"\n            \t\t}]\n\t    \t\t}\n\t\t \t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "\n{\n        error: true,\n        message: \"internal error\",\n        status: 500,\n        data: null\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/ecomRoutes.js",
    "groupTitle": "read",
    "name": "GetApiV1ProductsViewByCategoryCategory"
  },
  {
    "type": "get",
    "url": "/api/v1/products/view/by/:productId",
    "title": "Get information of a particular product",
    "version": "1.0.0",
    "group": "read",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "authToken",
            "description": "<p>The token for authentication.(Send authToken as query parameter, body parameter or as a header)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productId",
            "description": "<p>productId of the product passed as the URL parameter</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": " {\n\t    error: false,\n\t    message: \"product details found\",\n\t    status: 200,\n\t    data: [{\n\t\t\t\t\tproductImage: {\n\t\t\t\t\t\tthumbnail: \"string\",\n\t\t\t\t\t\tlarge: \"string\"\n\t\t\t\t\t},\n\t\t\t\t\tproductName: \"string\",\n\t\t\t\t\tproductDetails: \"string\",\n\t\t\t\t\tproductPrice: number,\n\t\t\t\t\tproductPriceDiscount: number,\n\t\t\t\t\tproductViews: number,\n\t\t\t\t\tisPublished: boolean,\n\t\t\t\t\tcategory: \"string\",\n\t\t\t\t\tseller: \"string\",\n\t\t\t\t\tareaAvailability: \"string\"(type = array),\n\t\t\t\t\tseoTags: \"string\"(type = array),\n\t\t\t\t\tposted: \"string\",\n\t\t\t\t\tlastUpdated: \"string\",\n\t\t\t\t\tinCartOfCustomers: \"string\"(type = array),\n\t\t\t\t\tproductId: \"string\"\n            \t\t}]\n\t    \t\t}\n\t\t \t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "\n{\n        error: true,\n        message: \"internal error\",\n        status: 500,\n        data: null\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/ecomRoutes.js",
    "groupTitle": "read",
    "name": "GetApiV1ProductsViewByProductid"
  },
  {
    "type": "post",
    "url": "/api/v1/products/cart/add",
    "title": "add product to customer cart",
    "version": "1.0.0",
    "group": "update",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "authToken",
            "description": "<p>The token for authentication.(Send authToken as query parameter, body parameter or as a header)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productId",
            "description": "<p>productId of the product passed as the body parameter</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "customerId",
            "description": "<p>customerId of the product passed as the body parameter</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": " {\n    \t\terror: false,\n    \t\tmessage: \"added to cart\",\n    \t\tstatus: 200,\n    \t\tdata: {\n        \t\t\tmessage: \"product add to cart of customer having id :customerId\"\n\t\t\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "\n{\n        error: true,\n        message: \"internal error\",\n        status: 500,\n        data: null\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/ecomRoutes.js",
    "groupTitle": "update",
    "name": "PostApiV1ProductsCartAdd"
  },
  {
    "type": "post",
    "url": "/api/v1/products/cart/remove",
    "title": "remove product from customer cart",
    "version": "1.0.0",
    "group": "update",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "authToken",
            "description": "<p>The token for authentication.(Send authToken as query parameter, body parameter or as a header)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productId",
            "description": "<p>productId of the product passed as the body parameter</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "customerId",
            "description": "<p>customerId of the product passed as the body parameter</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": " {\n    \t\terror: false,\n    \t\tmessage: \"removed from cart of customer having id :customerId\",\n    \t\tstatus: 404,\n    \t\tdata: null\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "\n{\n        error: true,\n        message: \"internal error\",\n        status: 500,\n        data: null\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/ecomRoutes.js",
    "groupTitle": "update",
    "name": "PostApiV1ProductsCartRemove"
  },
  {
    "type": "post",
    "url": "/api/v1/products/:productId/count/view",
    "title": "Increase product's view count",
    "version": "1.0.0",
    "group": "update",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "authToken",
            "description": "<p>The token for authentication.(Send authToken as query parameter, body parameter or as a header)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productId",
            "description": "<p>productId of the product passed as the URL parameter</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": " {\n    \t\terror: false,\n    \t\tmessage: \"product view count increased by 1\",\n    \t\tstatus: 200,\n    \t\tdata: {\n        \t\t\tinfo: \"you viewed this product\"\n    \t\t\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "\n{\n        error: true,\n        message: \"internal error\",\n        status: 500,\n        data: null\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/ecomRoutes.js",
    "groupTitle": "update",
    "name": "PostApiV1ProductsProductidCountView"
  }
]
